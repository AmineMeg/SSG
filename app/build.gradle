/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id "com.github.spotbugs" version "5.0.6"
    id 'com.adarshr.test-logger' version '3.1.0'
}

applicationDefaultJvmArgs = ["--add-opens=java.base/java.lang=ALL-UNNAMED", "--add-opens=java.base/java.io=ALL-UNNAMED", "--add-opens=java.base/java.util=ALL-UNNAMED"]

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.8.1'
    testImplementation "org.mockito:mockito-core:4.4.0"

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://github.com/remkop/picocli
    implementation 'info.picocli:picocli:4.6.3'
    annotationProcessor 'info.picocli:picocli-codegen:4.6.3'

    //https://github.com/commonmark/commonmark-java
    implementation 'org.commonmark:commonmark:0.18.2'

    //https://github.com/HubSpot/jinjava
    implementation 'com.hubspot.jinjava:jinjava:2.6.0'

    spotbugs 'com.github.spotbugs:spotbugs:4.6.0'

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'

    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.6.0'

    // https://mvnrepository.com/artifact/com.google.inject/guice
    implementation group: 'com.google.inject', name: 'guice', version: '5.1.0'

    // https://mvnrepository.com/artifact/com.google.inject/guice
    implementation group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '5.1.0'


    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.17.1'

    // https://mvnrepository.com/artifact/nu.validator/validator
    implementation group: 'nu.validator', name: 'validator', version: '20.7.2'

    // https://mvnrepository.com/artifact/com.jcabi/jcabi-w3c
    implementation group: 'com.jcabi', name: 'jcabi-w3c', version: '1.3'

    implementation 'com.konghq:unirest-java:3.13.6'

    // https://github.com/tomlj/tomlj
    implementation 'org.tomlj:tomlj:1.0.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.13.2.2'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.2'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.13.2'


}

application {
    // Define the main class for the application.
    mainClass = 'ssg.App'
}

startScripts {
    applicationName = 'ssg'
}

checkstyle {
    toolVersion = '10.0'
    configFile = file("${rootDir}/app/config/checkstyle/google_checks.xml")
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

pmd {
    consoleOutput = true
    toolVersion = "6.42.0"
    rulesMinimumPriority = 5
    ruleSetFiles = files("config/pmd/pmd.xml")
    ruleSets = []
    ignoreFailures = true
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    reportsDir = file("$buildDir/spotbugs")
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=fr' ]
}

test {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        csv.enabled true
        csv.destination file("${buildDir}/jacocoCsv")
    }
    dependsOn test
    sourceDirectories.from files(sourceSets.main.allJava.srcDirs)
}

testlogger {
    theme 'mocha'
}

jar {
    manifest {
        attributes(
                'Main-Class': 'ssg.App',
                'Multi-Release': 'true'
        )
    }
    archivesBaseName = 'ssg'
}

distZip {
    archiveName "ssg.zip"
}

shadowDistZip {
    archiveName "ssg-compressed.zip"
}

startShadowScripts {
    applicationName = 'ssg'
}
