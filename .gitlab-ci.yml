# This file is a template, and might need editing before it works on your project.
# This is the Gradle build system for JVM applications
# https://gradle.org/
# https://github.com/gradle/gradle

# inclure les variables et les mod√®les
include:
  - local: pipeline-scripts/.gitlab-ci-variables.yml
  - local: pipeline-scripts/.gitlab-ci-deploy-template.yml
  - local: pipeline-scripts/.gitlab-ci-release-template.yml

stages:
  - build
  - test
  - deploy
  - release

image: gradle:alpine

services:
  - docker:dind

before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

gradle-build:
  stage: build
  script: gradle --build-cache assemble
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - app/build
      - .gradle

  artifacts:
    paths:
      - app/build/distributions/ssg.zip
      - app/build/distributions/ssg-compressed.zip

unit-test:
  stage: test
  except:
    - tags
  script: gradle test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle



checkstyle-test:
  stage: test
  except:
    - tags
  script:
    - gradle checkstyleMain
    - gradle checkstyleTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle


PMD-test:
  stage: test
  except:
    - tags
  script:
    - gradle pmdMain
    - gradle pmdTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle


spotbugs-test:
  stage: test
  except:
    - tags
  script:
    - gradle spotbugsMain
    - gradle spotbugsTest
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle


total-check:
  stage: test
  except:
    - tags
  script:
    - gradle check
    - awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' $JACOCO_CSV_LOCATION
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle

deploy:
  stage: deploy
  image: alpine:latest
  when: manual
  extends: .gitlab-ci-deploy-template

  only:
    - master

  except:
    - tags

  before_script:
    - apk --no-cache add curl


  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - app/build
      - .gradle

release:
  stage: release
  image: alpine:latest
  when: manual
  extends: .gitlab-ci-release-template

  only:
    - tags

  before_script:
    - apk --no-cache add curl
    - export ARTIFACTS_URL="$PROJECT_URL-/jobs/$CI_JOB_ID/artifacts/download?job=release"

  artifacts:
    paths:
      - app/build/distributions/ssg.zip
      - app/build/distributions/ssg-compressed.zip

generate-javadoc:
  stage: release

  only:
    - tags

  script:
    - gradle javadoc

  artifacts:
    paths:
      - app/build/docs/javadoc
